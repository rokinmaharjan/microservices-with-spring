version: '2.1'
services:
  configserver:
    image: config-server
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 2
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: eureka-server
    ports:
      - "8070:8070"
    environment:
      spring_cloud_config_uri: "http://configserver:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 2
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      backend:
        aliases:
          - "eurekaserver"
  microservice1:
    image: microservice1
    environment:
      spring_cloud_config_uri: "http://configserver:8071"
      # eureka.client.serviceUrl.defaultZone: "http://eurekaserver:8070/eureka/"
      server_port: "8080"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
  microservice2:
    image: microservice2
    environment:
      spring_cloud_config_uri: "http://configserver:8071"
      # eureka_client_serviceUrl_defaultZone: "http://eurekaserver:8070/eureka/"
      server_port: "8081"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - backend
  microservice2_2:
    image: microservice2
    environment:
      spring_cloud_config_uri: "http://configserver:8071"
      # eureka_client_serviceUrl_defaultZone: "http://eurekaserver:8070/eureka/"
      server_port: "8083"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - backend
  microservice3:
    image: microservice3
    environment:
      spring_cloud_config_uri: "http://configserver:8071"
      # eureka_client_serviceUrl_defaultZone: "http://eurekaserver:8070/eureka/"
      server_port: "8082"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - backend
  microservice3_2:
    image: microservice3
    environment:
      spring_cloud_config_uri: "http://configserver:8071"
      # eureka_client_serviceUrl_defaultZone: "http://eurekaserver:8070/eureka/"
      server_port: "8084"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    ports:
      - "8084:8084"
    networks:
      - backend

networks:
  backend:
    driver: bridge